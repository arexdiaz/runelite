name: CI (No rule set)

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-20.04

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - name: Extract artifact name
        id: artifact
        run: echo "::set-output name=ARTIFACT_NAME::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)"

      - name: Print dependency tree
        run: mvn dependency:tree

      - name: Build
        run: mvn clean install -DskipTests

      - name: Release-Test
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.artifact.outputs.ARTIFACT_NAME }}
          name: Release ${{ steps.artifact.outputs.ARTIFACT_NAME }}
          draft: false
          prerelease: false

      - name: Get Release ID
        id: get_release_id
        run: |
          RELEASE_ID=$(curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/$TAG_NAME" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            | jq '.id')
          echo "::set-output name=release_id::$RELEASE_ID"

      - name: Get Asset ID
        id: get_asset_id
        run: |
          ASSET_ID=$(curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/${{ steps.get_release_id.outputs.release_id }}/assets" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            | jq '.[] | select(.name=="client-1.10.27-SNAPSHOT-shaded.jar") | .id')
          echo "::set-output name=asset_id::$ASSET_ID"

      - name: Delete Asset
        run: |
          curl --silent -X DELETE "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/assets/${{ steps.get_asset_id.outputs.asset_id }}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./runelite-client/target/client-1.10.27-SNAPSHOT-shaded.jar
          asset_name: client-1.10.27-SNAPSHOT-shaded.jar
          asset_content_type: application/java-archive
